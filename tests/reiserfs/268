#! /bin/bash
# FS QA Test No. 268
#
# Test xfsdump with multiple media files where a file ends
# at the end of the first media file (i.e., no file is split
# across media files).
#
#-----------------------------------------------------------------------
# Copyright (c) 2011 SGI.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=0	# success is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

#
# create two 12 MiB files with extended attrs.
# xfsdump writes file data in "extent groups", currently 16 MiB in size. After
# writing an extent group or finishing a file, xfsdump will start a new media
# file if it is over the suggested size. A media file size of 8 MiB is used
# below, so after dumping a 12 MiB file xfsdump will start a new media file and
# no file will be split across a media file.
#
_create_files()
{
    cat <<End-of-File >$tmp.config
# pathname	size            user    group    perm   name value namespace
bigg1		12582912	$nobody	$nobody  777    attr1 some_text1  root
bigg2		12582912	$nobody	$nobody  777    attr2 some_text2  user
End-of-File

    _wipe_fs
    _do_create_dumpdir_fill
    _stable_fs
}

# get standard environment, filters and checks
. ./common/rc
. ./common/dump
. ./common/attr

# real QA test starts here
_supported_fs xfs
_supported_os Linux

_require_tape $TAPE_DEV
_require_attrs

_create_files
_erase_hard
_do_dump -d 8
_do_restore
_ls_compare_sub
_diff_compare
_diff_compare_eas

# success, all done
exit
